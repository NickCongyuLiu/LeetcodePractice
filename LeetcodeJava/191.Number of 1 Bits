public class Solution {
//     // you need to treat n as an unsigned value
//     Write a function that takes an unsigned integer and returns the number of ’1' bits it has (also known as the Hamming weight).

// For example, the 32-bit integer ’11' has binary representation 00000000000000000000000000001011, so the function should return 3.
    public int hammingWeight(int n) {
        
        String str="";
        int result =0;
         
        if(n>Integer.MAX_VALUE){
           return 32;
        }
        
        str=Integer.toBinaryString(n);
        System.out.println(str);
        
        for(int i =0;i<str.length();i++){
            if(str.charAt(i)=='1'){
                result++;
            }
        }
        
        return result;
    }
}
