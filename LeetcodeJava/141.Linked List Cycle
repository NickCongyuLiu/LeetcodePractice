/**Given a linked list, determine if it has a cycle in it.
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head==null){
            return false;
        }
        ListNode checker = head;
        ListNode runned = null;
        
        while(checker.next!=null){
            runned= checker;
            checker=checker.next;
            if(checker==head){
                return true;
            }else{
                runned.next = head;
            }
        }
        
        return false;
        
    }
}
